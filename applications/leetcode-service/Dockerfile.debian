# Usar una imagen base de Debian
FROM debian:bullseye-slim

ENV DISPLAY=host.docker.internal:0
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome
ENV LEETCODE_SERVICE_COOKIE_DIR=/usr/cookies
ENV LEETCODE_USERNAME=OVERRIDE_DEFAULT_LEETCODE_USERNAME
ENV LEETCODE_PASSWORD=OVERRIDE_DEFAULT_LEETCODE_PASSWORD
ENV PORT=9994

# Configuraci贸n inicial e instalaci贸n de dependencias
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    apt-transport-https \
    software-properties-common \
    chromium \
    bzip2 \
    libasound2 \
    libdbus-glib-1-2 \
    libc6 \
    fonts-liberation \
    libx11-xcb1 \
    libxcomposite1 \
    libxrandr2 \
    libxdamage1 \
    libfontconfig1 \
    libgtk-3-0 \
    x11-xserver-utils \
    && rm -rf /var/lib/apt/lists/*

# Crear un alias o renombrar el binario de Chromium a google-chrome
RUN ln -s /usr/bin/chromium /usr/bin/google-chrome \
    && ln -s /usr/bin/chromium /usr/bin/google-chrome-stable

# Descargar y extraer Firefox desde el sitio oficial de Mozilla
RUN wget -O firefox.tar.bz2 "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US" \
    && tar -xjf firefox.tar.bz2 -C /opt/ \
    && rm firefox.tar.bz2 \
    && ln -s /opt/firefox/firefox /usr/bin/google-chrome

# Verificar la instalaci贸n
RUN google-chrome --version
RUN /usr/bin/google-chrome --version

# Configuraci贸n adicional (Node.js, Yarn, etc.)
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    xvfb \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g yarn \
    && rm -rf /var/lib/apt/lists/*


RUN apt-get update && apt-get install -y procps && rm -rf /var/lib/apt/lists/*
# Set up the working directory in the container
WORKDIR /leetcode-service

# Copy package.json and package-lock.json to the working directory
COPY package.json yarn.lock ./

RUN npm install -g --force yarn
RUN corepack enable
RUN yarn set version berry
RUN yarn plugin import https://raw.githubusercontent.com/mhassan1/yarn-plugin-after-install/v0.6.0/bundles/@yarnpkg/plugin-after-install.js
RUN yarn install

# Copy the rest of the application code
COPY . .
RUN yarn build

RUN mkdir -p ${LEETCODE_SERVICE_COOKIE_DIR}

# Expose the port your app runs on
EXPOSE ${PORT}

# Command to run the application
CMD ["npm", "run", "start"]
